_exclude:
  - '*.py[co]'
  - .DS_Store
  - .git
  - .svn
  - __pycache__
  - copier.yaml
  - copier.yml
  - includes
  - src/serious_scaffold
  - ~*
project_name:
  default: Serious Scaffold Python
  help: 'Project name in CamelCase:'
  type: str
project_description:
  default: A development-focused Python project template with various integrations, configurations and modules.
  help: 'Brief project description:'
  type: str
author_name:
  default: huxuan
  help: 'Author name:'
  type: str
organization_name:
  default: Serious Scaffold
  help: 'Organization name:'
  type: str
author_email:
  default: |-
    {% if author_name == 'huxuan' and organization_name == 'Serious Scaffold' -%}
      i@huxuan.org
    {%- else -%}
      {{ author_name }}@{{ organization_name|lower|replace(" ", "-") }}.com
    {%- endif %}
  help: 'Author email:'
  type: str
repo_namespace:
  default: '{{ organization_name|lower|replace(" ", "-") }}'
  help: 'Github Repository Owner or GitLab Namespace, it should be the account name of the author or the organization:'
  type: str
repo_name:
  default: '{{ project_name|lower|replace(" ", "-") }}'
  help: 'Repo name:'
  type: str
package_name:
  default: '{{ repo_name|regex_replace("-python$", "") }}'
  help: 'Package name:'
  type: str
module_name:
  default: '{{ package_name|lower|replace("-", "_") }}'
  help: 'Module name:'
  type: str
coverage_threshold:
  default: 100
  help: 'Threshold for test coverage (0-100):'
  type: int
  validator: '{% if not 0 <= coverage_threshold <= 100 %}Coverage threshold should be between 0 and 100.{% endif %}'
minimal_python_version:
  choices:
    - '3.8'
    - '3.9'
    - '3.10'
    - '3.11'
  default: '3.8'
  help: 'Minimal Python Version to support:'
  type: str
maximal_python_version:
  choices:
    '3.8':
      validator: '{% from pathjoin("includes", "version_compare.jinja") import version_less_than -%}{{ "Invalid" if version_less_than("3.8", minimal_python_version) | bool }}'
      value: '3.8'
    '3.9':
      validator: '{% from pathjoin("includes", "version_compare.jinja") import version_less_than -%}{{ "Invalid" if version_less_than("3.9", minimal_python_version) | bool }}'
      value: '3.9'
    '3.10':
      validator: '{% from pathjoin("includes", "version_compare.jinja") import version_less_than -%}{{ "Invalid" if version_less_than("3.10", minimal_python_version) | bool }}'
      value: '3.10'
    '3.11':
      value: '3.11'
  default: '3.11'
  help: 'Maximal Python Version to support:'
  type: str
default_python_version:
  choices:
    '3.8':
      validator: '{% from pathjoin("includes", "version_compare.jinja") import version_between %}{{ "Invalid" if not version_between("3.8", minimal_python_version, maximal_python_version) | bool }}'
      value: '3.8'
    '3.9':
      validator: '{% from pathjoin("includes", "version_compare.jinja") import version_between %}{{ "Invalid" if not version_between("3.9", minimal_python_version, maximal_python_version) | bool }}'
      value: '3.9'
    '3.10':
      validator: '{% from pathjoin("includes", "version_compare.jinja") import version_between %}{{ "Invalid" if not version_between("3.10", minimal_python_version, maximal_python_version) | bool }}'
      value: '3.10'
    '3.11':
      validator: '{% from pathjoin("includes", "version_compare.jinja") import version_between %}{{ "Invalid" if not version_between("3.11", minimal_python_version, maximal_python_version) | bool }}'
      value: '3.11'
  default: '{{ maximal_python_version }}'
  help: 'Default Python Version (e.g. for daily development, docs generation):'
  type: str
