[% from pathjoin("includes", "variable.jinja") import repo_url with context -%]
[% from pathjoin("includes", "version_compare.jinja") import version_between -%]
[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools",
  "setuptools-scm",
]

[project]
authors = [
  {email = "{{ author_email }}", name = "{{ author_name }}"},
]
classifiers = [
[%- if development_status == "Alpha" %]
  "Development Status :: 3 - Alpha",
[%- elif development_status == "Beta" %]
  "Development Status :: 4 - Beta",
[%- elif development_status == "Stable" %]
  "Development Status :: 5 - Production/Stable",
[%- endif %]
  "License :: OSI Approved :: {{ copyright_license }}",
  "Operating System :: OS Independent",
[%- if version_between("3.10", min_py, max_py) %]
  "Programming Language :: Python :: 3.10",
[%- endif %]
[%- if version_between("3.11", min_py, max_py) %]
  "Programming Language :: Python :: 3.11",
[%- endif %]
[%- if version_between("3.12", min_py, max_py) %]
  "Programming Language :: Python :: 3.12",
[%- endif %]
[%- if version_between("3.8", min_py, max_py) %]
  "Programming Language :: Python :: 3.8",
[%- endif %]
[%- if version_between("3.9", min_py, max_py) %]
  "Programming Language :: Python :: 3.9",
[%- endif %]
]
description = "{{ project_description }}"
dynamic = [
  "dependencies",
  "optional-dependencies",
  "version",
]
keywords = [
  "development-focused",
  "project template",
]
name = "{{ package_name }}"
readme = "README.md"
requires-python = ">={{ min_py }}"

[project.scripts]
{{ package_name }}-cli = "{{ module_name }}.cli:app"

[project.urls]
homepage = "https://{{ repo_url() }}/"
[% if repo_host_type == 'github.com' -%]
issue = "https://{{ repo_url() }}/issues"
[%- elif repo_host_type == 'gitlab.com' or repo_host_type == 'gitlab-self-managed' -%]
issue = "https://{{ repo_url() }}/-/issues"
[%- endif %]
[%- if project_name == "Serious Scaffold Python" %]

[tool.black]
force-exclude = '''
(
  template/.*
)
'''
[%- endif %]

[tool.coverage.report]
fail_under = {{ coverage_threshold }}

[tool.coverage.run]
source = [
  "{{ module_name }}",
]

[tool.isort]
color_output = true
[%- if project_name == "Serious Scaffold Python" %]
extend_skip = [
  "template",
]
[%- endif %]
profile = "black"

[tool.mypy]
check_untyped_defs = true
disallow_any_unimported = true
disallow_untyped_defs = true
enable_error_code = [
  "ignore-without-code",
]
[%- if project_name == "Serious Scaffold Python" %]
exclude = [
  "template",
]
[%- endif %]
no_implicit_optional = true
show_error_codes = true
warn_return_any = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "-l -s --durations=0"
log_cli = true
log_cli_level = "info"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_format = "%(asctime)s %(levelname)s %(message)s"
minversion = "6.0"

[tool.ruff]
[%- if project_name == "Serious Scaffold Python" %]
extend-exclude = [
  "template",
]
[%- endif %]
fix = true
ignore = [
  # https://docs.astral.sh/ruff/rules/#pydocstyle-d
  "D203",
  "D204",
  "D213",
  "D215",
  "D400",
  "D404",
  "D406",
  "D407",
  "D408",
  "D409",
  "D413",
]
select = ["ALL"]
src = ["src"]

[tool.ruff.per-file-ignores]
"docs/conf.py" = ["INP001"]
"test/*" = ["S101"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}

[tool.setuptools.dynamic.optional-dependencies]
docs = {file = ["requirements/docs.txt"]}
lint = {file = ["requirements/lint.txt"]}
package = {file = ["requirements/package.txt"]}
test = {file = ["requirements/test.txt"]}

[tool.setuptools_scm]

[tool.tomlsort]
all = true
in_place = true
trailing_comma_inline_array = true
