[% from pathjoin("includes", "version_compare.jinja") import version_between -%]
ci:
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  cache:
    paths:
      - .venv
    key:
      files:
        - pdm.lock
      prefix: venv-${PYTHON_VERSION}
  coverage: /(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/
  image: ${CI_REGISTRY_IMAGE}/dev:py${PYTHON_VERSION}
  interruptible: true
  parallel:
    matrix:
      - PYTHON_VERSION:
[%- if version_between("3.8", min_py, max_py) %]
          - '3.8'
[%- endif %]
[%- if version_between("3.9", min_py, max_py) %]
          - '3.9'
[%- endif %]
[%- if version_between("3.10", min_py, max_py) %]
          - '3.10'
[%- endif %]
[%- if version_between("3.11", min_py, max_py) %]
          - '3.11'
[%- endif %]
[%- if version_between("3.12", min_py, max_py) %]
          - '3.12'
[%- endif %]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - make prerequisites
    - make dev
    - make lint test doc build
  stage: ci
[%- if project_name == 'Serious Scaffold Python' %]
consistency:
  interruptible: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - git config --global user.name gitlab-ci
    - git config --global user.email gitlab-ci@gitlab.com
    - pipx install copier==9.3.1
    - make consistency
    - git diff
    - git status --porcelain
    - test -z "$(git status --porcelain)"
  stage: ci
[%- endif %]
semantic-release:
  image:
    name: node:20.15.0@sha256:93d2e801dabc677ea0b30b47d3d729fab63ecb20be7ac0ab204cc3c65731297a
  interruptible: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push" && $CI_PROJECT_NAMESPACE == "{{ repo_namespace }}" && $CI_PROJECT_NAME == "{{ repo_name }}" && $PAT != null
  script:
    - >
      npx
      --package @semantic-release/gitlab@13.1.0
      --package conventional-changelog-conventionalcommits@8.0.0
      --package semantic-release@24.0.0
      semantic-release
  stage: release
  variables:
    GITLAB_TOKEN: $PAT
