[% from pathjoin("includes", "version_compare.jinja") import version_between -%]
pages-build:
  artifacts:
    paths:
      - public
      - docs/changelog.md
      - release-notes.md
  cache:
    paths:
      - .venv
    key:
      files:
        - pdm.lock
      prefix: venv-${PYTHON_VERSION}
    policy: pull
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-?(a|b|rc)(0|[1-9][0-9]*)?)?$/
  script:
    - make dev-doc
    - make doc
    - make release-notes > release-notes.md
  stage: release
release-publish:
  image: registry.gitlab.com/gitlab-org/release-cli:v0.18.0@sha256:696013aea0f2a20482800ce3a77341f840d7c7ec17bd78bd555e0bd6c00e4f11
  needs:
    - pages-build
  release:
    description: release-notes.md
    tag_name: $CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-?(a|b|rc)(0|[1-9][0-9]*)?)?$/
  script:
    - echo "Running the release job."
  stage: release
  variables:
    GIT_STRATEGY: none
container-publish:
  image: docker:26.1.1@sha256:56e2c522194d81689c2787c76304777199cbdc741d7dd798d06e33967361d92f
  needs:
    - release-publish
  parallel:
    matrix:
      - PYTHON_VERSION:
[%- if version_between("3.8", min_py, max_py) %]
          - '3.8'
[%- endif %]
[%- if version_between("3.9", min_py, max_py) %]
          - '3.9'
[%- endif %]
[%- if version_between("3.10", min_py, max_py) %]
          - '3.10'
[%- endif %]
[%- if version_between("3.11", min_py, max_py) %]
          - '3.11'
[%- endif %]
[%- if version_between("3.12", min_py, max_py) %]
          - '3.12'
[%- endif %]
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-?(a|b|rc)(0|[1-9][0-9]*)?)?$/
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker context create builder
    - docker buildx create builder --name container --driver docker-container --use
    - docker buildx inspect --bootstrap --builder container
    - |
      docker buildx build . \
        --build-arg PYTHON_VERSION=${PYTHON_VERSION} \
        --cache-from type=registry,ref=${CI_REGISTRY_IMAGE}/dev-cache:py${PYTHON_VERSION} \
        --cache-to type=registry,ref=${CI_REGISTRY_IMAGE}/dev-cache:py${PYTHON_VERSION},mode=max \
        --file .devcontainer/Dockerfile \
        --provenance false \
        --push \
        --tag ${CI_REGISTRY_IMAGE}/dev:py${PYTHON_VERSION} \
        --tag ${CI_REGISTRY_IMAGE}/dev:py${PYTHON_VERSION}-${CI_COMMIT_TAG} \
        --target dev
    - |
      docker buildx build . \
        --build-arg PDM_BUILD_SCM_VERSION=${CI_COMMIT_TAG} \
        --build-arg PYTHON_VERSION=${PYTHON_VERSION} \
        --cache-from type=registry,ref=${CI_REGISTRY_IMAGE}/dev-cache:py${PYTHON_VERSION} \
        --file .devcontainer/Dockerfile \
        --provenance false \
        --push \
        --tag ${CI_REGISTRY_IMAGE}:py${PYTHON_VERSION} \
        --tag ${CI_REGISTRY_IMAGE}:py${PYTHON_VERSION}-${CI_COMMIT_TAG} \
        --target prod
  services:
    - docker:26.1.1@sha256:56e2c522194d81689c2787c76304777199cbdc741d7dd798d06e33967361d92f
  stage: release
  variables:
    DOCKER_TLS_CERTDIR: /certs
    PYTHON_VERSION: ${PYTHON_VERSION}
    SOURCE_DATE_EPOCH: 0
package-publish:
  needs:
    - release-publish
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-?(a|b|rc)(0|[1-9][0-9]*)?)?$/
  script:
    - make publish
  stage: release
pages:
  artifacts:
    paths:
      - public
  needs:
    - pages-build
    - release-publish
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-?(a|b|rc)(0|[1-9][0-9]*)?)?$/
  script:
    - echo "Running the pages job."
  stage: release
  variables:
    GIT_STRATEGY: none
