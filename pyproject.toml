[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools",
  "setuptools-scm",
]

[project]
authors = [
  {email = "i@huxuan.org", name = "huxuan"},
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
]
description = "A Python project template covering the entire development lifecycle with various integrations, configurations and modules."
dynamic = [
  "dependencies",
  "optional-dependencies",
  "version",
]
keywords = [
  "copier-template",
  "full-development-lifecycle",
  "project-template",
  "serious-scaffold",
]
name = "ss-python"
readme = "README.md"
requires-python = ">=3.8"

[project.scripts]
ss-python-cli = "ss_python.cli:app"

[project.urls]
homepage = "https://github.com/serious-scaffold/ss-python/"
issue = "https://github.com/serious-scaffold/ss-python/issues"

[tool.coverage.report]
fail_under = 100

[tool.coverage.run]
source = [
  "ss_python",
]

[tool.mypy]
check_untyped_defs = true
disallow_any_unimported = true
disallow_untyped_defs = true
enable_error_code = [
  "ignore-without-code",
]
exclude = [
  "template",
]
no_implicit_optional = true
show_error_codes = true
warn_return_any = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "-l -s --durations=0"
log_cli = true
log_cli_level = "info"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_format = "%(asctime)s %(levelname)s %(message)s"
minversion = "6.0"

[tool.ruff]
extend-exclude = [
  "template",
]
fix = true
src = ["src"]

[tool.ruff.lint]
select = [
  "B", # flake8-bugbear
  "D", # pydocstyle
  "E", # pycodestyle error
  "F", # Pyflakes
  "I", # isort
  "RUF100", # Unused noqa directive
  "S", # flake8-bandit
  "SIM", # flake8-simplify
  "UP", # pyupgrade
  "W", # pycodestyle warning
]

[tool.ruff.lint.per-file-ignores]
"test/*" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}

[tool.setuptools.dynamic.optional-dependencies]
docs = {file = ["requirements/docs.txt"]}
lint = {file = ["requirements/lint.txt"]}
package = {file = ["requirements/package.txt"]}
test = {file = ["requirements/test.txt"]}

[tool.setuptools_scm]

[tool.tomlsort]
all = true
in_place = true
trailing_comma_inline_array = true
