[build-system]
build-backend = "pdm.backend"
requires = [
  "pdm-backend==2.2.1",
]

[project]
authors = [
  {email = "i@huxuan.org", name = "huxuan"},
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
]
dependencies = [
  "pydantic-settings",
  "typer[all]",
]
description = "An evolving Python project template that covers the full development lifecycle."
dynamic = [
  "version",
]
keywords = [
  "copier-template",
  "full-development-lifecycle",
  "project-template",
  "serious-scaffold",
]
license = {text = "MIT"}
name = "ss-python"
readme = "README.md"
requires-python = ">=3.8"

[project.scripts]
ss-python-cli = "ss_python.cli:app"

[project.urls]
documentation = "https://serious-scaffold.github.io/ss-python"
issue = "https://github.com/serious-scaffold/ss-python/issues"
repository = "https://github.com/serious-scaffold/ss-python"

[tool.coverage.report]
fail_under = 100

[tool.coverage.run]
source = [
  "ss_python",
]

[tool.mypy]
check_untyped_defs = true
disallow_any_unimported = true
disallow_untyped_defs = true
enable_error_code = [
  "ignore-without-code",
]
exclude = [
  "build",
  "template",
]
no_implicit_optional = true
show_error_codes = true
warn_return_any = true
warn_unused_ignores = true

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
doc = [
  "Sphinx",
  "autodoc-pydantic",
  "coverage",
  "furo",
  "git-changelog",
  "mypy[reports]",
  "myst-parser",
  "pytest",
  "sphinx-autobuild",
  "sphinx-click",
  "sphinx-design",
  "sphinx-togglebutton",
]
lint = [
  "mypy",
  "ruff",
  "toml-sort",
]
test = [
  "coverage",
  "pytest",
]

[tool.pdm.version]
source = "scm"

[tool.pytest.ini_options]
addopts = "-l -s --durations=0"
log_cli = true
log_cli_level = "info"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_format = "%(asctime)s %(levelname)s %(message)s"
minversion = "6.0"

[tool.ruff]
extend-exclude = [
  "template",
]
fix = true
src = ["src"]

[tool.ruff.lint]
select = [
  "B", # flake8-bugbear
  "D", # pydocstyle
  "E", # pycodestyle error
  "F", # Pyflakes
  "I", # isort
  "RUF100", # Unused noqa directive
  "S", # flake8-bandit
  "SIM", # flake8-simplify
  "UP", # pyupgrade
  "W", # pycodestyle warning
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.tomlsort]
all = true
in_place = true
trailing_comma_inline_array = true
