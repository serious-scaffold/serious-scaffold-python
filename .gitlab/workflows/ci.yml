ci:
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  cache:
    paths:
      - .venv
    key:
      files:
        - pdm.lock
      prefix: venv-${PYTHON_VERSION}
  coverage: /(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/
  image: ${CI_REGISTRY_IMAGE}/dev:py${PYTHON_VERSION}
  interruptible: true
  parallel:
    matrix:
      - PYTHON_VERSION:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - make dev
    - make lint test doc build
  stage: ci
consistency:
  interruptible: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - git config --global user.name gitlab-ci
    - git config --global user.email gitlab-ci@gitlab.com
    - pipx install copier==9.2.0
    - make consistency
    - git diff
    - git status --porcelain
    - test -z "$(git status --porcelain)"
  stage: ci
semantic-release:
  image:
    name: node:20.13.1@sha256:d6925dc84f8c0d1c1f8df4ea6a9a54e57d430241cb734b1b0c45ed6d26e8e9c0
  interruptible: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push" && $CI_PROJECT_NAMESPACE == "serious-scaffold" && $CI_PROJECT_NAME == "ss-python" && $PAT != null
  script:
    - >
      npx
      --package @semantic-release/gitlab@13.1.0
      --package conventional-changelog-conventionalcommits@7.0.2
      --package semantic-release@23.1.1
      semantic-release
  stage: release
  variables:
    GITLAB_TOKEN: $PAT
