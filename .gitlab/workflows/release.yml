pages-build:
  artifacts:
    paths:
      - public
  cache:
    paths:
      - .venv
    key:
      files:
        - pdm.lock
      prefix: venv-${PYTHON_VERSION}
    policy: pull
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-?(a|b|rc)(0|[1-9][0-9]*)?)?$/
  script:
    - make dev-doc
    - make doc
  stage: release
pages:
  artifacts:
    paths:
      - public
  needs:
    - pages-build
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-?(a|b|rc)(0|[1-9][0-9]*)?)?$/
  script:
    - echo "Running the pages job."
  stage: release
  variables:
    GIT_STRATEGY: none
container-publish:
  image: docker:26.1.3@sha256:76ba10a4aed708c7b2db09d45740d711edf707f7368f6808bd32a53eaed33404
  parallel:
    matrix:
      - PYTHON_VERSION:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-?(a|b|rc)(0|[1-9][0-9]*)?)?$/
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker context create builder
    - docker buildx create builder --name container --driver docker-container --use
    - docker buildx inspect --bootstrap --builder container
    - |
      docker buildx build . \
        --build-arg PYTHON_VERSION=${PYTHON_VERSION} \
        --cache-from type=registry,ref=${CI_REGISTRY_IMAGE}/dev-cache:py${PYTHON_VERSION} \
        --file .devcontainer/Dockerfile \
        --load \
        --tag ${CI_REGISTRY_IMAGE}/dev:py${PYTHON_VERSION} \
        --tag ${CI_REGISTRY_IMAGE}/dev:py${PYTHON_VERSION}-${CI_COMMIT_TAG} \
        --target dev
    - |
      docker run --rm \
        -e CI=true \
        -v ${PWD}:/workspace \
        ${CI_REGISTRY_IMAGE}/dev:py${PYTHON_VERSION} \
        make dev lint test doc build
    - |
      docker buildx build . \
        --build-arg SCM_VERSION=${CI_COMMIT_TAG} \
        --build-arg PYTHON_VERSION=${PYTHON_VERSION} \
        --file .devcontainer/Dockerfile \
        --load \
        --tag ${CI_REGISTRY_IMAGE}:py${PYTHON_VERSION} \
        --tag ${CI_REGISTRY_IMAGE}:py${PYTHON_VERSION}-${CI_COMMIT_TAG} \
        --target prod
    - docker run --rm ${CI_REGISTRY_IMAGE}:py${PYTHON_VERSION}
    - |
      docker buildx build . \
        --build-arg PYTHON_VERSION=${PYTHON_VERSION} \
        --cache-to type=registry,ref=${CI_REGISTRY_IMAGE}/dev-cache:py${PYTHON_VERSION},mode=max \
        --file .devcontainer/Dockerfile \
        --push \
        --tag ${CI_REGISTRY_IMAGE}/dev:py${PYTHON_VERSION} \
        --tag ${CI_REGISTRY_IMAGE}/dev:py${PYTHON_VERSION}-${CI_COMMIT_TAG} \
        --target dev
    - |
      docker buildx build . \
        --build-arg SCM_VERSION=${CI_COMMIT_TAG} \
        --build-arg PYTHON_VERSION=${PYTHON_VERSION} \
        --file .devcontainer/Dockerfile \
        --push \
        --tag ${CI_REGISTRY_IMAGE}:py${PYTHON_VERSION} \
        --tag ${CI_REGISTRY_IMAGE}:py${PYTHON_VERSION}-${CI_COMMIT_TAG} \
        --target prod
  services:
    - docker:26.1.3@sha256:76ba10a4aed708c7b2db09d45740d711edf707f7368f6808bd32a53eaed33404
  stage: release
  variables:
    DOCKER_TLS_CERTDIR: /certs
    PYTHON_VERSION: ${PYTHON_VERSION}
    SOURCE_DATE_EPOCH: 0
package-publish:
  rules:
    - if: $CI_COMMIT_TAG =~ /^v?(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-?(a|b|rc)(0|[1-9][0-9]*)?)?$/
  script:
    - make publish
  stage: release
